    
 
  
 
   
 
          
 
      
 
      
 
    
 
  
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
Joi.any().required()
 
      
 
      if ((fields.name[i] === "UpdatedAT" ) || (fields.name[i] === "status") || (fields.name[i] === "Status") || (fields.name[i] === "updated_at")  || (fields.name[i] === "CreatedAT")  || (fields.name[i] === "created_at")) {
        continue;
      }else if(Uploads.includes(fields.name[i])){
        valid += `  ${fields.name[i]} : Joi.any().optional(),\n`;
        continue;
      }
 
          
 
/------------------------------
 
    `;
 
else{
       
    }
 
       
 
${data.PhoneNumber}
 

         

         


 
PhoneNumber
 
  const tdfield = dfield.toLowerCase();
  if ( (tdfield.includes("picture")) || (tdfield.includes("image")) || (tdfield.includes("photo")) || (tdfield.includes("img")) ) {
    HasUpload = true;
    Uploads.push(dfield);
 

          if( files.ID_Photo_Back !== undefined){
            const ID_Photo_Back  = files.ID_Photo_Back[0];
            data.ID_Photo_Back= renameUploadFile(ID_Photo_Back,`${dir}/ID_Photo_Back${data.PhoneNumber}`);
          }

 
    const validate = await  outreachValidation.validateCreateOutreach(req, res, next);
    if(validate.result == "error"){
      result = {};
       result.code = 400;
       result.message = validate.message;
       return res.status(result.code).send(result);
    }

 
        
 
   const agentExist =  await DbHelper.find("FieldAgents", data.AgentID, ["FieldAgentID"]);

    if(agentExist === ""){
      return res.status(400).send({code:400,message:`AgentID (${ data.AgentID}) doesnt exist`});
    }

 
   const prevRecord =  await DbHelper.find("Outreach", data.PhoneNumber, ["PhoneNumber"]);
    if(prevRecord !== ""){
      return res.status(400).send({code:400,message:"Record already exist with the same PhoneNumber"});
    }

 
          dController += `
 

const ${tbname}Handler = require("./${tbname}.handler");
const Log = require("../../helpers/console.helper");
const ${tbname}Validation = require("./${tbname}.validation");`;
 

const ${tbname}Handler = require("./${tbname}.handler");
const Log = require("../../helpers/console.helper");
const ${tbname}Validation = require("./${tbname}.validation");`;
 
const appFunctions = require("../../helpers/app.helper");
const DbHelper = require("../../helpers/db.helper");
 
    
 
let
 





 
        
 
       
 
let
 
  
 
valid += `  ${fields.name[i]} : Joi.any().required(),\n`;
 
 === "UpdatedAT" ) || (fields.name[i] === "status") || (fields.name[i] === "Status") || (fields.name[i] === "updated_at")  || (fields.name[i] === "CreatedAT")  || (fields.name[i] === "created_at")
 
tbname
 
${tbname}.code
 
is
 
Joi.any().required(),
 
Joi.any().required(),
 
